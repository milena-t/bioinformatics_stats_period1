install.packages("car")
install.packages("rgl")
?rnorm
source('~/.active-rstudio-document')
# R lab Arild GWAs
setwd('~/bioinformatics/period1_intro_to_stats/lab6-gwa/')
fmsURL <- "http://www.stat-gen.org/book.e1/data/FMS_data.txt"
fms <- read.delim(file=fmsURL, header=T, sep="\t")
head(fmsURL)
fms <- read.delim(file=fmsURL, header=T, sep="\t")
head(fms)
(fms)
fmsURL <- "http://www.stat-gen.org/book.e1/data/FMS_data.txt"
fms <- read.delim(file=fmsURL, header=T, sep="\t")
(fms)
head(fms)
attach(fms)
NamesAkt1Snps <- names(fms)[substr(names(fms),1,4)=="akt1"] #Note use of substring function to pull out snp names with akt1 included
length(NamesAkt1Snps)
FMSgenoNum[is.na(FMSgenoNum)] <- 4
FMSgeno <- fms[,is.element(names(fms),NamesAkt1Snps)]
FMSgenoNum <- data.matrix(FMSgeno)
FMSgenoNum[is.na(FMSgenoNum)] <- 4
dim(FMSgenoNum)
DistFmsGeno <- as.matrix(dist(FMSgenoNum))
DistFmsGeno[1:5,1:5]
#multidimensional scaling
plot(cmdscale(DistFmsGeno),xlab="C1",ylab="C2")
abline(v=0,lty=2)
abline(h=4,lty=2)
?cmdscale
PCFMS <- prcomp(FMSgenoNum)
plot(PCFMS$"x"[,1],PCFMS$"x"[,2],xlab="PC1",ylab="PC2")
vircoURL <- "http://www.stat-gen.org/book.e1/data/Virco_data.csv"
virco <- read.csv(file=vircoURL, header=T, sep=",")
attach(virco)
PrMut <- virco[,23:121]!="-" & virco[,23:121]!="."
NObs <- dim(virco)[1]
PrMutSub <-data.frame(PrMut[ , apply(PrMut,2,sum) > NObs*.05])
Trait <- IDV.Fold - NFV.Fold
PrMut <- virco[,23:121]!="-" & virco[,23:121]!="."
NObs <- dim(virco)[1]
PrMutSub <-data.frame(PrMut[ , apply(PrMut,2,sum) > NObs*.05])
Trait <- IDV.Fold - NFV.Fold
TtestP <- function(Geno){
return(t.test(Trait[Geno==1], Trait[Geno==0], na.rm=T)$"p.value")
}
Pvec <- apply(PrMutSub, 2, TtestP)
sort(Pvec)
length(Pvec)
names(PrMutSub)[Pvec < 0.05]
1-(1-0.05)^47
0.05/47
1-(1-0.05/47)^47
PvecAdj <- p.adjust(Pvec, method = 'bonferroni')
sort(PvecAdj)
names(PrMutSub)[PvecAdj < 0.05]
names(PrMutSub)[PvecAdj < 0.05]
PvecBH <- p.adjust(Pvec, method="BH")
names(PrMutSub)[PvecBH < 0.05]
#lab6 experimental design
setwd('~/bioinformatics/period1_intro_to_stats/lab6-exp-design/')
source("http://bioconductor.org/biocLite.R")
biocLite("edgeR")
BiocManager("edgeR")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
library(baySeq)
library(edgeR)
load("mobData.RData")
head(mobData)
load("mobData.RData")
head(mobData)
help(mobData)
mobDataGroups<-c("MM","MM","WM","WM","WW","WW")
d<-DGEList(counts=mobData,group=factor(mobDataGroups))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
load("mobData.RData")
library(baySeq)
BiocManager::install(c("edgeR", "baySeq"))
library(baySeq)
library(edgeR)
load("mobData.RData")
head(mobData)
mobDataGroups<-c("MM","MM","WM","WM","WW","WW")
d<-DGEList(counts=mobData,group=factor(mobDataGroups))
d
d.full<-d# Give the object new name, to keep it for answering the question.
head(d$counts)
head(cpm(d))
apply(d$counts,2,sum)
keep<-rowSums(cpm(d)>100)>=2
d<-d[keep,]
d$samples$lib.size<-colSums(d$counts)
d$samples
d.full$samples
d$samples$lib.size
=cpm
?cpm
d$samples$lib.size
d.full$samples$lib.size
diff(d.full$samples$lib.size, d$samples$lib.size)
d.full$samples$lib.size - d$samples$lib.size
keep<-rowSums(cpm(d)>1)>=2
d<-d[keep,]
d$samples$lib.size<-colSums(d$counts)
d$samples$lib.size
d.full$samples$lib.size - d$samples$lib.size
d<-DGEList(counts=mobData,group=factor(mobDataGroups))
d.full<-d# Give the object new name, to keep it for answering the question.
head(d$counts)
head(cpm(d))
apply(d$counts,2,sum)
keep<-rowSums(cpm(d)>1)>=2
d<-d[keep,]
d$samples$lib.size<-colSums(d$counts)
d$samples$lib.size
d.full$samples$lib.size - d$samples$lib.size
d<-DGEList(counts=mobData,group=factor(mobDataGroups))
d.full<-d# Give the object new name, to keep it for answering the question.
head(d$counts)
head(cpm(d))
apply(d$counts,2,sum)
keep<-rowSums(cpm(d)>1000)>=2
#with 100: filter [1]  7308 15067  9697  8278 15776 16444
#with 1: filter [1] 10 36  8 39 10 14
d<-d[keep,]
d$samples$lib.size<-colSums(d$counts)
d$samples$lib.size
d.full$samples$lib.size - d$samples$lib.size
d<-calcNormFactors(d)
plotMDS(d,method="bcv",col=as.numeric(d$samples$group))legend("bottomleft",as.character(unique(d$samples$group)),col=1:3,pch=20)
plotMDS(d,method="bcv",col=as.numeric(d$samples$group))legend("bottomleft",as.character(unique(d$samples$group)),col=1:3,pch=20)
plotMDS(d,method="bcv",col=as.numeric(d$samples$group))
legend("bottomleft",as.character(unique(d$samples$group)),col=1:3,pch=20)
d<-DGEList(counts=mobData,group=factor(mobDataGroups))
d.full<-d# Give the object new name, to keep it for answering the question.
head(d$counts)
head(cpm(d))
apply(d$counts,2,sum)
keep<-rowSums(cpm(d)>100)>=2
#with 1000: filter [1] 24138 48318 34379 27008 52622 54823
#with 100: filter [1]  7308 15067  9697  8278 15776 16444
#with 1: filter [1] 10 36  8 39 10 14
d<-d[keep,]
d$samples$lib.size<-colSums(d$counts)
d$samples$lib.size
d<-calcNormFactors(d)
plotMDS(d,method="bcv",col=as.numeric(d$samples$group))
legend("bottomleft",as.character(unique(d$samples$group)),col=1:3,pch=20)
d$samples$group
